# services:
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: ecommerce-app
#     env_file:
#       - .env
#     ports:
#       - '${PORT}:${PORT}'
#     depends_on:
#       db:
#         condition: service_healthy
#     networks:
#       - ecommerce-network

#   db:
#     image: postgres:15-alpine
#     container_name: ecommerce-db
#     env_file:
#       - .env
#     ports:
#       - '5432:5432'
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     healthcheck:
#       test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
#       interval: 10s
#       timeout: 5s
#       retries: 5
#     networks:
#       - ecommerce-network

# networks:
#   ecommerce-network:
#     driver: bridge

# volumes:
#   postgres_data:
#     driver: local

version: '3.9'

services:
  db:
    image: postgres:15-alpine
    container_name: ecommerce-db
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
